#+title: Features | Org mode
#+setupfile: setup.org
#+description: Org: an Emacs Mode for Notes, Planning and Authoring
#+include: "./resources/preamble.html" export html

#+begin_export html
<style>
  .side-fig img {
    filter: invert(1.4%);
    box-shadow: none;
    max-width: 100%;
  }
  #content {
    max-width: none;
  }
  body {
    padding: 1em 0 0 0;
  }
  .outline-text-3 p {
    padding-bottom: 0.5em;
  }
  :root {
    --body-left: 0 !important;
    --body-right: 0 !important;
  }
</style>

<script type="text/javascript" async src="/resources/js/org-quotes.js"></script>
<div class="banner slim"> <p id="a-quote"></p> </div>
#+end_export

* Elegant Markup
:PROPERTIES:
:CUSTOM_ID: markup
:HTML_CONTAINER_CLASS: side-fig
:END:

#+attr_html: :class main-image :style max-height:12em; :alt Example basic Org document showing the key textual elements
[[file:resources/img/features/simple-syntax.svg]]
                                          
** Description

Org mode is routinely used to build and manage complex workflows.  It
does this using an elegantly simple syntax that scales from basic
markup to full LaTeX typesetting and from plain text notes to literate
programs.

Everything you need to get started is demonstrated in the example.

*** More

More on [[file:manual/Markup-for-Rich-Contents.html][markup]] (manual)

* Structured Editing@@comment: and Navigation@@
  :PROPERTIES:
  :CUSTOM_ID: editing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of folding and unfolding sections in Org
[[file:resources/img/features/folding.gif]]

** Description

The fundamental structure of an Org document is a tree, with nested,
collapsible sections forming its backbone.  You can fold and unfold
whole trees with single keystroke --- =tab=.

Org's trees make for quick, graceful navigation and powerful
information hiding that lets you focus on the task at hand without
compromising the ability to get the information you need complete it.

Controlling section visibility is only a tiny part of Org's set of
tools and commands for structured editing of plain text.  Org mode
leverages Org's regular syntax to transform otherwise tedious tasks
into single key commands, freeing you to focus on content rather than
form.

*** More

More on [[file:manual/Document-Structure.html][document structure]] (manual)

* Transparent Tables
  :PROPERTIES:
  :CUSTOM_ID: tables
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Manipulating tables with Org, moving cells/rows and executing formulas
[[file:resources/img/features/tables.gif]]

** Description

Org includes a powerful table editor.

=tab= moves between /columns/.
=return= moves between /rows/.

Layout updates automatically as cell contents change.

Import tables from =.csv= and =.tsv= files, or directly from the
contents of the current buffer, then export them to any format
supported by Org.

Org tables aren't just static views of data.  They can be used as a
full [[https://orgmode.org/manual/The-Spreadsheet.html][spreadsheet]] system, with formulas, references and more --- all
with the simplicity and transparency of plain text.

*** More

The [[file:manual/Built_002din-Table-Editor.html][built-in table editor]] (manual)

Org as a [[file:manual/The-Spreadsheet.html][spreadsheet]] system (manual)

Introduction to [[https://orgmode.org/worg/org-tutorials/tables.html][editing tables]] (Worg)

Using [[https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][Org as a spreadsheet]] (Worg)

* Superior Source Code
  :PROPERTIES:
  :CUSTOM_ID: babel
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of Org Babel executing code blocks
[[file:resources/img/features/babel.gif]]

** Description

Org provides functionality far beyond that of computational notebooks
such as [[https://jupyter.org/][Jupyter]] or [[https://rmarkdown.rstudio.com/][R Markdown]].

# Program your way.
[[https://orgmode.org/worg/org-contrib/babel/][Org babel]] transforms the lowly executable source block into a complete
[[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] environment, allowing you to weave the inputs and
outputs of multiple languages and runtime environments across multiple
machines into a single unified system, empowering you to achieve new
levels of [[https://en.wikipedia.org/wiki/Don%27t_repeat_yourself][DRYness]] regardless of whether the languages you are working
in want you to or not.

# Free your code
Org makes it trivial to extract source code and generate documentation
from the same file. While many languages have support for generating
developer documentation from code comments, with Org your developer
guide and user manual can also be the source code for implementation
and testing --- a single source of truth that won't drift out of sync.

# Emacs. We will add your technological distinctiveness to our own.
Org currently has support for over [[https://orgmode.org/worg/org-contrib/babel/languages/index.html][80 languages]], and projects like
[[https://github.com/nnicandro/emacs-jupyter#org-mode-source-blocks][emacs-jupyter]] make it possible to leverage the Jupyter kernel
ecosystem for even more languages.

*** More

[[file:manual/Working-with-Source-Code.html][Working with source code]] (manual)

List of [[https://orgmode.org/worg/org-contrib/babel/languages/index.html][supported languages]] (Worg)
* Export and Publish
  :PROPERTIES:
  :CUSTOM_ID: publishing
  :HTML_CONTAINER_CLASS: side-fig
  :END:
# Powerful publishing

#+attr_html: :class main-image :alt Showing an Org file being exported to HTML, markdown, PDF and plaintext
[[file:resources/img/features/exports.gif]]

** Description

Org is an authoring and publishing tool --- it can function as
everything from a static site generator, to a suite of tools for
self-publishing.

Draft documents using Org's intuitive markup, then export to your
format of choice.  Org supports many formats including:

- =HTML=
- $\LaTeX$
- =ODT=
- and more!

Developers can easily create new backends for their favorite format
(see the [[https://orgmode.org/worg/dev/org-export-reference.html][ox reference documentation]]) and Org is also supported by
[[https://pandoc.org][Pandoc]].

In addition to exporting single files, you can define /publishing
projects/ for one or more =.org= files and accompanying resources,
targeting one or more publication backends.

*** More

One poorly kept secret is that the Org website is written in Org!

More on [[file:manual/Markup-for-Rich-Contents.html][markup]] (manual)

More on [[file:manual/Exporting.html][exporting]] (manual)

More on [[file:manual/Publishing.html][publishing]] (manual)

[[https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html][Tutorial on publishing]] to HTML (Worg)

[[https://orgmode.org/worg/org-tutorials/org-latex-export.html][Tutorial on publishing]] to $\LaTeX$ (Worg)
* Take Control of Tasks
  :PROPERTIES:
  :CUSTOM_ID: planning
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of planning with org, managing a scheduled todo list
[[file:resources/img/features/planning.gif]]

** Description

Org is an extremely capable task planner, time tracker and TODO list.

Any section can become a /TODO item/ by adding a keyword such as =TODO= or
=HOLD= to track the state of the task.  You can cycle through task
states with the shortcuts =S-<left>= and =S-<right>=.

Need add your own set of states?  No problem.  Org lets you customize
them to support your workflow.

Org /Agenda/ makes it easy to view tasks from multiple files in one
place.  All you have to do is add one of the TODO keywords.  Org has
built-in support for task priority, deadlines, scheduled tasks, tags,
clocking and more. /Agenda/ can use of all of it to organize and
prioritize tasks --- seamlessly scaling from a simple TODO list into a
complete project management suite, all with plain text markup.

*** More

More on [[file:manual/TODO-Items.html][TODO items]] (manual)

Handling [[file:manual/Dates-and-Times.html][dates and times]] (manual)

* Actionable Agendas
  :PROPERTIES:
  :CUSTOM_ID: agendas
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt An example Org agenda, displaying various todo keywords, priorities, categorisation and scheduling
[[file:resources/img/features/agenda.svg]]

** Description

Plan your day, your way, with ease.

With /agenda views/ --- reports generated from your /TODO items/ --- you
can see your tasks on a daily, weekly and monthly basis.

Even with hundreds of =.org= files and thousands of tasks, agenda lets
you focus on what you need to do and quickly take action, jumping
from the high level overview directly into the task at hand.

The default agenda shows scheduled and deadlined tasks for the week,
stalled projects and all your outstanding TODO items.

Not satisfied with the defaults? Org agenda is highly configurable.
You can customize the contents of default views or create your own
[[https://orgmode.org/manual/Custom-Agenda-Views.html][custom views]].

In a sense Org is an expressive language that captures the key points
of interaction in workflows, simplifying and refining the process of
developing new workflows as they emerge during the course of work,
play, or life in general.

*** More

More on [[file:manual/Agenda-Views.html][agenda views]] (manual)

Tutorial on [[https://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][agenda commands]] (Worg)

* Clocking
  :PROPERTIES:
  :CUSTOM_ID: clocking
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Using Org to keep track of how long various subtasks took
[[file:resources/img/features/clocking.svg]]

** Description

Keep track of the time you spend on your tasks with Org /Clocking/, and
at end of the day you can generate customized reports about how you
spent your time.

Org provides shortcuts to /clock in/ and /clock out/ of tasks.  When
working in an =.org= file =C-c C-x C-i= clocks in and =C-c C-x C-o= clocks
out. Time is stored in the property drawer of the headline for the
task at had.

You can also use =I= and =O= when in an agenda view.

*** More

More on [[file:manual/Clocking-Work-Time.html][clocking tasks]] (manual)

* Capture Data From Anywhere
  :PROPERTIES:
  :CUSTOM_ID: capturing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Using Org Capture to record an idea while editing a file
[[file:resources/img/features/capturing.gif]]

** Description

You can add content to an =.org= file by /capturing/ data.

You can capture from anywhere --- from an Emacs buffer or from other
applications like your web browser, PDF viewer and more.

Capture templates provide a quick and effective way to ingest
structured data for a variety of workflows, from adding TODO items to
quoting the relevant section of a manual or saving a receipt.

*** More

More on [[file:manual/Capture.html][capturing]] (manual)

* Extremely Extensible
  :PROPERTIES:
  :CUSTOM_ID: extensibiliy
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Display of some default and custom Org link types
[[file:resources/img/features/links.svg]]

** Description
Org mode isn't just extensible, it is /Emacs extensible/.

Org started out as an extension. As a result, extensibility is present
in nearly every aspect of Org.

To give only a single example, consider hyperlinks.  While updating
documentation you find yourself repeatedly linking to GitHub
issues. In Org you can add a new ~issue:~ link type to the document so
that ~[[issue:74][big bug]]~ expands to
=https://github.com/author/repo/issues/74=.

Beyond expanding links, you can define custom resolving functions,
link to files on remote machines with [[https://www.emacswiki.org/emacs/TrampMode][Tramp]], and more.
